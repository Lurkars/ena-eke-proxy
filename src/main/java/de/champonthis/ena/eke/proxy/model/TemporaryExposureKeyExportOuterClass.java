package de.champonthis.ena.eke.proxy.model;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TemporaryExposureKeyExport.proto

public final class TemporaryExposureKeyExportOuterClass {
	private TemporaryExposureKeyExportOuterClass() {
	}

	public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
	}

	public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
		registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
	}

	public interface TemporaryExposureKeyExportOrBuilder extends
			// @@protoc_insertion_point(interface_extends:TemporaryExposureKeyExport)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Time window of keys in this batch based on arrival to server, in UTC seconds.
		 * </pre>
		 *
		 * <code>optional fixed64 start_timestamp = 1;</code>
		 * 
		 * @return Whether the startTimestamp field is set.
		 */
		boolean hasStartTimestamp();

		/**
		 * <pre>
		 * Time window of keys in this batch based on arrival to server, in UTC seconds.
		 * </pre>
		 *
		 * <code>optional fixed64 start_timestamp = 1;</code>
		 * 
		 * @return The startTimestamp.
		 */
		long getStartTimestamp();

		/**
		 * <code>optional fixed64 end_timestamp = 2;</code>
		 * 
		 * @return Whether the endTimestamp field is set.
		 */
		boolean hasEndTimestamp();

		/**
		 * <code>optional fixed64 end_timestamp = 2;</code>
		 * 
		 * @return The endTimestamp.
		 */
		long getEndTimestamp();

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return Whether the region field is set.
		 */
		boolean hasRegion();

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return The region.
		 */
		java.lang.String getRegion();

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return The bytes for region.
		 */
		com.google.protobuf.ByteString getRegionBytes();

		/**
		 * <pre>
		 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
		 * Note: Not yet supported on iOS.
		 * </pre>
		 *
		 * <code>optional int32 batch_num = 4;</code>
		 * 
		 * @return Whether the batchNum field is set.
		 */
		boolean hasBatchNum();

		/**
		 * <pre>
		 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
		 * Note: Not yet supported on iOS.
		 * </pre>
		 *
		 * <code>optional int32 batch_num = 4;</code>
		 * 
		 * @return The batchNum.
		 */
		int getBatchNum();

		/**
		 * <code>optional int32 batch_size = 5;</code>
		 * 
		 * @return Whether the batchSize field is set.
		 */
		boolean hasBatchSize();

		/**
		 * <code>optional int32 batch_size = 5;</code>
		 * 
		 * @return The batchSize.
		 */
		int getBatchSize();

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo> getSignatureInfosList();

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		TemporaryExposureKeyExportOuterClass.SignatureInfo getSignatureInfos(int index);

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		int getSignatureInfosCount();

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		java.util.List<? extends TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder> getSignatureInfosOrBuilderList();

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder getSignatureInfosOrBuilder(int index);

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getKeysList();

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getKeys(int index);

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		int getKeysCount();

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getKeysOrBuilderList();

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getKeysOrBuilder(int index);

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getRevisedKeysList();

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getRevisedKeys(int index);

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		int getRevisedKeysCount();

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getRevisedKeysOrBuilderList();

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(int index);
	}

	/**
	 * Protobuf type {@code TemporaryExposureKeyExport}
	 */
	public static final class TemporaryExposureKeyExport extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:TemporaryExposureKeyExport)
			TemporaryExposureKeyExportOrBuilder {
		private static final long serialVersionUID = 0L;

		// Use TemporaryExposureKeyExport.newBuilder() to construct.
		private TemporaryExposureKeyExport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private TemporaryExposureKeyExport() {
			region_ = "";
			signatureInfos_ = java.util.Collections.emptyList();
			keys_ = java.util.Collections.emptyList();
			revisedKeys_ = java.util.Collections.emptyList();
		}

		@java.lang.Override
		@SuppressWarnings({ "unused" })
		protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
			return new TemporaryExposureKeyExport();
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private TemporaryExposureKeyExport(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					case 9: {
						bitField0_ |= 0x00000001;
						startTimestamp_ = input.readFixed64();
						break;
					}
					case 17: {
						bitField0_ |= 0x00000002;
						endTimestamp_ = input.readFixed64();
						break;
					}
					case 26: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000004;
						region_ = bs;
						break;
					}
					case 32: {
						bitField0_ |= 0x00000008;
						batchNum_ = input.readInt32();
						break;
					}
					case 40: {
						bitField0_ |= 0x00000010;
						batchSize_ = input.readInt32();
						break;
					}
					case 50: {
						if (!((mutable_bitField0_ & 0x00000020) != 0)) {
							signatureInfos_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.SignatureInfo>();
							mutable_bitField0_ |= 0x00000020;
						}
						signatureInfos_.add(input.readMessage(TemporaryExposureKeyExportOuterClass.SignatureInfo.PARSER,
								extensionRegistry));
						break;
					}
					case 58: {
						if (!((mutable_bitField0_ & 0x00000040) != 0)) {
							keys_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey>();
							mutable_bitField0_ |= 0x00000040;
						}
						keys_.add(input.readMessage(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.PARSER,
								extensionRegistry));
						break;
					}
					case 66: {
						if (!((mutable_bitField0_ & 0x00000080) != 0)) {
							revisedKeys_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey>();
							mutable_bitField0_ |= 0x00000080;
						}
						revisedKeys_.add(input.readMessage(
								TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.PARSER, extensionRegistry));
						break;
					}
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000020) != 0)) {
					signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
				}
				if (((mutable_bitField0_ & 0x00000040) != 0)) {
					keys_ = java.util.Collections.unmodifiableList(keys_);
				}
				if (((mutable_bitField0_ & 0x00000080) != 0)) {
					revisedKeys_ = java.util.Collections.unmodifiableList(revisedKeys_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKeyExport_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKeyExport_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.class,
							TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.Builder.class);
		}

		private int bitField0_;
		public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
		private long startTimestamp_;

		/**
		 * <pre>
		 * Time window of keys in this batch based on arrival to server, in UTC seconds.
		 * </pre>
		 *
		 * <code>optional fixed64 start_timestamp = 1;</code>
		 * 
		 * @return Whether the startTimestamp field is set.
		 */
		@java.lang.Override
		public boolean hasStartTimestamp() {
			return ((bitField0_ & 0x00000001) != 0);
		}

		/**
		 * <pre>
		 * Time window of keys in this batch based on arrival to server, in UTC seconds.
		 * </pre>
		 *
		 * <code>optional fixed64 start_timestamp = 1;</code>
		 * 
		 * @return The startTimestamp.
		 */
		@java.lang.Override
		public long getStartTimestamp() {
			return startTimestamp_;
		}

		public static final int END_TIMESTAMP_FIELD_NUMBER = 2;
		private long endTimestamp_;

		/**
		 * <code>optional fixed64 end_timestamp = 2;</code>
		 * 
		 * @return Whether the endTimestamp field is set.
		 */
		@java.lang.Override
		public boolean hasEndTimestamp() {
			return ((bitField0_ & 0x00000002) != 0);
		}

		/**
		 * <code>optional fixed64 end_timestamp = 2;</code>
		 * 
		 * @return The endTimestamp.
		 */
		@java.lang.Override
		public long getEndTimestamp() {
			return endTimestamp_;
		}

		public static final int REGION_FIELD_NUMBER = 3;
		private volatile java.lang.Object region_;

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return Whether the region field is set.
		 */
		@java.lang.Override
		public boolean hasRegion() {
			return ((bitField0_ & 0x00000004) != 0);
		}

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return The region.
		 */
		@java.lang.Override
		public java.lang.String getRegion() {
			java.lang.Object ref = region_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					region_ = s;
				}
				return s;
			}
		}

		/**
		 * <pre>
		 * Region for which these keys came from, such as country.
		 * </pre>
		 *
		 * <code>optional string region = 3;</code>
		 * 
		 * @return The bytes for region.
		 */
		@java.lang.Override
		public com.google.protobuf.ByteString getRegionBytes() {
			java.lang.Object ref = region_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				region_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int BATCH_NUM_FIELD_NUMBER = 4;
		private int batchNum_;

		/**
		 * <pre>
		 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
		 * Note: Not yet supported on iOS.
		 * </pre>
		 *
		 * <code>optional int32 batch_num = 4;</code>
		 * 
		 * @return Whether the batchNum field is set.
		 */
		@java.lang.Override
		public boolean hasBatchNum() {
			return ((bitField0_ & 0x00000008) != 0);
		}

		/**
		 * <pre>
		 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
		 * Note: Not yet supported on iOS.
		 * </pre>
		 *
		 * <code>optional int32 batch_num = 4;</code>
		 * 
		 * @return The batchNum.
		 */
		@java.lang.Override
		public int getBatchNum() {
			return batchNum_;
		}

		public static final int BATCH_SIZE_FIELD_NUMBER = 5;
		private int batchSize_;

		/**
		 * <code>optional int32 batch_size = 5;</code>
		 * 
		 * @return Whether the batchSize field is set.
		 */
		@java.lang.Override
		public boolean hasBatchSize() {
			return ((bitField0_ & 0x00000010) != 0);
		}

		/**
		 * <code>optional int32 batch_size = 5;</code>
		 * 
		 * @return The batchSize.
		 */
		@java.lang.Override
		public int getBatchSize() {
			return batchSize_;
		}

		public static final int SIGNATURE_INFOS_FIELD_NUMBER = 6;
		private java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo> signatureInfos_;

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		@java.lang.Override
		public java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo> getSignatureInfosList() {
			return signatureInfos_;
		}

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		@java.lang.Override
		public java.util.List<? extends TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder> getSignatureInfosOrBuilderList() {
			return signatureInfos_;
		}

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		@java.lang.Override
		public int getSignatureInfosCount() {
			return signatureInfos_.size();
		}

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.SignatureInfo getSignatureInfos(int index) {
			return signatureInfos_.get(index);
		}

		/**
		 * <pre>
		 * Information about associated signatures
		 * </pre>
		 *
		 * <code>repeated .SignatureInfo signature_infos = 6;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder getSignatureInfosOrBuilder(int index) {
			return signatureInfos_.get(index);
		}

		public static final int KEYS_FIELD_NUMBER = 7;
		private java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> keys_;

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		@java.lang.Override
		public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getKeysList() {
			return keys_;
		}

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		@java.lang.Override
		public java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getKeysOrBuilderList() {
			return keys_;
		}

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		@java.lang.Override
		public int getKeysCount() {
			return keys_.size();
		}

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getKeys(int index) {
			return keys_.get(index);
		}

		/**
		 * <pre>
		 * The TemporaryExposureKeys for initial release of keys.
		 * Keys should be included in this list for initial release,
		 * whereas revised or revoked keys should go in revised_keys.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey keys = 7;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getKeysOrBuilder(int index) {
			return keys_.get(index);
		}

		public static final int REVISED_KEYS_FIELD_NUMBER = 8;
		private java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> revisedKeys_;

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		@java.lang.Override
		public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getRevisedKeysList() {
			return revisedKeys_;
		}

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		@java.lang.Override
		public java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getRevisedKeysOrBuilderList() {
			return revisedKeys_;
		}

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		@java.lang.Override
		public int getRevisedKeysCount() {
			return revisedKeys_.size();
		}

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getRevisedKeys(int index) {
			return revisedKeys_.get(index);
		}

		/**
		 * <pre>
		 * TemporaryExposureKeys that have changed status.
		 * Keys should be included in this list if they have changed status
		 * or have been revoked.
		 * </pre>
		 *
		 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(int index) {
			return revisedKeys_.get(index);
		}

		private byte memoizedIsInitialized = -1;

		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) != 0)) {
				output.writeFixed64(1, startTimestamp_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				output.writeFixed64(2, endTimestamp_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 3, region_);
			}
			if (((bitField0_ & 0x00000008) != 0)) {
				output.writeInt32(4, batchNum_);
			}
			if (((bitField0_ & 0x00000010) != 0)) {
				output.writeInt32(5, batchSize_);
			}
			for (int i = 0; i < signatureInfos_.size(); i++) {
				output.writeMessage(6, signatureInfos_.get(i));
			}
			for (int i = 0; i < keys_.size(); i++) {
				output.writeMessage(7, keys_.get(i));
			}
			for (int i = 0; i < revisedKeys_.size(); i++) {
				output.writeMessage(8, revisedKeys_.get(i));
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeFixed64Size(1, startTimestamp_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeFixed64Size(2, endTimestamp_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, region_);
			}
			if (((bitField0_ & 0x00000008) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, batchNum_);
			}
			if (((bitField0_ & 0x00000010) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(5, batchSize_);
			}
			for (int i = 0; i < signatureInfos_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, signatureInfos_.get(i));
			}
			for (int i = 0; i < keys_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, keys_.get(i));
			}
			for (int i = 0; i < revisedKeys_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, revisedKeys_.get(i));
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport)) {
				return super.equals(obj);
			}
			TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport other = (TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport) obj;

			if (hasStartTimestamp() != other.hasStartTimestamp())
				return false;
			if (hasStartTimestamp()) {
				if (getStartTimestamp() != other.getStartTimestamp())
					return false;
			}
			if (hasEndTimestamp() != other.hasEndTimestamp())
				return false;
			if (hasEndTimestamp()) {
				if (getEndTimestamp() != other.getEndTimestamp())
					return false;
			}
			if (hasRegion() != other.hasRegion())
				return false;
			if (hasRegion()) {
				if (!getRegion().equals(other.getRegion()))
					return false;
			}
			if (hasBatchNum() != other.hasBatchNum())
				return false;
			if (hasBatchNum()) {
				if (getBatchNum() != other.getBatchNum())
					return false;
			}
			if (hasBatchSize() != other.hasBatchSize())
				return false;
			if (hasBatchSize()) {
				if (getBatchSize() != other.getBatchSize())
					return false;
			}
			if (!getSignatureInfosList().equals(other.getSignatureInfosList()))
				return false;
			if (!getKeysList().equals(other.getKeysList()))
				return false;
			if (!getRevisedKeysList().equals(other.getRevisedKeysList()))
				return false;
			if (!unknownFields.equals(other.unknownFields))
				return false;
			return true;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasStartTimestamp()) {
				hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
				hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getStartTimestamp());
			}
			if (hasEndTimestamp()) {
				hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
				hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getEndTimestamp());
			}
			if (hasRegion()) {
				hash = (37 * hash) + REGION_FIELD_NUMBER;
				hash = (53 * hash) + getRegion().hashCode();
			}
			if (hasBatchNum()) {
				hash = (37 * hash) + BATCH_NUM_FIELD_NUMBER;
				hash = (53 * hash) + getBatchNum();
			}
			if (hasBatchSize()) {
				hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
				hash = (53 * hash) + getBatchSize();
			}
			if (getSignatureInfosCount() > 0) {
				hash = (37 * hash) + SIGNATURE_INFOS_FIELD_NUMBER;
				hash = (53 * hash) + getSignatureInfosList().hashCode();
			}
			if (getKeysCount() > 0) {
				hash = (37 * hash) + KEYS_FIELD_NUMBER;
				hash = (53 * hash) + getKeysList().hashCode();
			}
			if (getRevisedKeysCount() > 0) {
				hash = (37 * hash) + REVISED_KEYS_FIELD_NUMBER;
				hash = (53 * hash) + getRevisedKeysList().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseDelimitedFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code TemporaryExposureKeyExport}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:TemporaryExposureKeyExport)
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExportOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKeyExport_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKeyExport_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.class,
								TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.Builder.class);
			}

			// Construct using
			// TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
					getSignatureInfosFieldBuilder();
					getKeysFieldBuilder();
					getRevisedKeysFieldBuilder();
				}
			}

			@java.lang.Override
			public Builder clear() {
				super.clear();
				startTimestamp_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000001);
				endTimestamp_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000002);
				region_ = "";
				bitField0_ = (bitField0_ & ~0x00000004);
				batchNum_ = 0;
				bitField0_ = (bitField0_ & ~0x00000008);
				batchSize_ = 0;
				bitField0_ = (bitField0_ & ~0x00000010);
				if (signatureInfosBuilder_ == null) {
					signatureInfos_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000020);
				} else {
					signatureInfosBuilder_.clear();
				}
				if (keysBuilder_ == null) {
					keys_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000040);
				} else {
					keysBuilder_.clear();
				}
				if (revisedKeysBuilder_ == null) {
					revisedKeys_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000080);
				} else {
					revisedKeysBuilder_.clear();
				}
				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKeyExport_descriptor;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport getDefaultInstanceForType() {
				return TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.getDefaultInstance();
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport build() {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport buildPartial() {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport result = new TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) != 0)) {
					result.startTimestamp_ = startTimestamp_;
					to_bitField0_ |= 0x00000001;
				}
				if (((from_bitField0_ & 0x00000002) != 0)) {
					result.endTimestamp_ = endTimestamp_;
					to_bitField0_ |= 0x00000002;
				}
				if (((from_bitField0_ & 0x00000004) != 0)) {
					to_bitField0_ |= 0x00000004;
				}
				result.region_ = region_;
				if (((from_bitField0_ & 0x00000008) != 0)) {
					result.batchNum_ = batchNum_;
					to_bitField0_ |= 0x00000008;
				}
				if (((from_bitField0_ & 0x00000010) != 0)) {
					result.batchSize_ = batchSize_;
					to_bitField0_ |= 0x00000010;
				}
				if (signatureInfosBuilder_ == null) {
					if (((bitField0_ & 0x00000020) != 0)) {
						signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
						bitField0_ = (bitField0_ & ~0x00000020);
					}
					result.signatureInfos_ = signatureInfos_;
				} else {
					result.signatureInfos_ = signatureInfosBuilder_.build();
				}
				if (keysBuilder_ == null) {
					if (((bitField0_ & 0x00000040) != 0)) {
						keys_ = java.util.Collections.unmodifiableList(keys_);
						bitField0_ = (bitField0_ & ~0x00000040);
					}
					result.keys_ = keys_;
				} else {
					result.keys_ = keysBuilder_.build();
				}
				if (revisedKeysBuilder_ == null) {
					if (((bitField0_ & 0x00000080) != 0)) {
						revisedKeys_ = java.util.Collections.unmodifiableList(revisedKeys_);
						bitField0_ = (bitField0_ & ~0x00000080);
					}
					result.revisedKeys_ = revisedKeys_;
				} else {
					result.revisedKeys_ = revisedKeysBuilder_.build();
				}
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return super.clone();
			}

			@java.lang.Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
				return super.setField(field, value);
			}

			@java.lang.Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@java.lang.Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@java.lang.Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					java.lang.Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@java.lang.Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return super.addRepeatedField(field, value);
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport) {
					return mergeFrom((TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport other) {
				if (other == TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport.getDefaultInstance())
					return this;
				if (other.hasStartTimestamp()) {
					setStartTimestamp(other.getStartTimestamp());
				}
				if (other.hasEndTimestamp()) {
					setEndTimestamp(other.getEndTimestamp());
				}
				if (other.hasRegion()) {
					bitField0_ |= 0x00000004;
					region_ = other.region_;
					onChanged();
				}
				if (other.hasBatchNum()) {
					setBatchNum(other.getBatchNum());
				}
				if (other.hasBatchSize()) {
					setBatchSize(other.getBatchSize());
				}
				if (signatureInfosBuilder_ == null) {
					if (!other.signatureInfos_.isEmpty()) {
						if (signatureInfos_.isEmpty()) {
							signatureInfos_ = other.signatureInfos_;
							bitField0_ = (bitField0_ & ~0x00000020);
						} else {
							ensureSignatureInfosIsMutable();
							signatureInfos_.addAll(other.signatureInfos_);
						}
						onChanged();
					}
				} else {
					if (!other.signatureInfos_.isEmpty()) {
						if (signatureInfosBuilder_.isEmpty()) {
							signatureInfosBuilder_.dispose();
							signatureInfosBuilder_ = null;
							signatureInfos_ = other.signatureInfos_;
							bitField0_ = (bitField0_ & ~0x00000020);
							signatureInfosBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
									? getSignatureInfosFieldBuilder()
									: null;
						} else {
							signatureInfosBuilder_.addAllMessages(other.signatureInfos_);
						}
					}
				}
				if (keysBuilder_ == null) {
					if (!other.keys_.isEmpty()) {
						if (keys_.isEmpty()) {
							keys_ = other.keys_;
							bitField0_ = (bitField0_ & ~0x00000040);
						} else {
							ensureKeysIsMutable();
							keys_.addAll(other.keys_);
						}
						onChanged();
					}
				} else {
					if (!other.keys_.isEmpty()) {
						if (keysBuilder_.isEmpty()) {
							keysBuilder_.dispose();
							keysBuilder_ = null;
							keys_ = other.keys_;
							bitField0_ = (bitField0_ & ~0x00000040);
							keysBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
									? getKeysFieldBuilder()
									: null;
						} else {
							keysBuilder_.addAllMessages(other.keys_);
						}
					}
				}
				if (revisedKeysBuilder_ == null) {
					if (!other.revisedKeys_.isEmpty()) {
						if (revisedKeys_.isEmpty()) {
							revisedKeys_ = other.revisedKeys_;
							bitField0_ = (bitField0_ & ~0x00000080);
						} else {
							ensureRevisedKeysIsMutable();
							revisedKeys_.addAll(other.revisedKeys_);
						}
						onChanged();
					}
				} else {
					if (!other.revisedKeys_.isEmpty()) {
						if (revisedKeysBuilder_.isEmpty()) {
							revisedKeysBuilder_.dispose();
							revisedKeysBuilder_ = null;
							revisedKeys_ = other.revisedKeys_;
							bitField0_ = (bitField0_ & ~0x00000080);
							revisedKeysBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
									? getRevisedKeysFieldBuilder()
									: null;
						} else {
							revisedKeysBuilder_.addAllMessages(other.revisedKeys_);
						}
					}
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport) e
							.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private long startTimestamp_;

			/**
			 * <pre>
			 * Time window of keys in this batch based on arrival to server, in UTC seconds.
			 * </pre>
			 *
			 * <code>optional fixed64 start_timestamp = 1;</code>
			 * 
			 * @return Whether the startTimestamp field is set.
			 */
			@java.lang.Override
			public boolean hasStartTimestamp() {
				return ((bitField0_ & 0x00000001) != 0);
			}

			/**
			 * <pre>
			 * Time window of keys in this batch based on arrival to server, in UTC seconds.
			 * </pre>
			 *
			 * <code>optional fixed64 start_timestamp = 1;</code>
			 * 
			 * @return The startTimestamp.
			 */
			@java.lang.Override
			public long getStartTimestamp() {
				return startTimestamp_;
			}

			/**
			 * <pre>
			 * Time window of keys in this batch based on arrival to server, in UTC seconds.
			 * </pre>
			 *
			 * <code>optional fixed64 start_timestamp = 1;</code>
			 * 
			 * @param value The startTimestamp to set.
			 * @return This builder for chaining.
			 */
			public Builder setStartTimestamp(long value) {
				bitField0_ |= 0x00000001;
				startTimestamp_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Time window of keys in this batch based on arrival to server, in UTC seconds.
			 * </pre>
			 *
			 * <code>optional fixed64 start_timestamp = 1;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearStartTimestamp() {
				bitField0_ = (bitField0_ & ~0x00000001);
				startTimestamp_ = 0L;
				onChanged();
				return this;
			}

			private long endTimestamp_;

			/**
			 * <code>optional fixed64 end_timestamp = 2;</code>
			 * 
			 * @return Whether the endTimestamp field is set.
			 */
			@java.lang.Override
			public boolean hasEndTimestamp() {
				return ((bitField0_ & 0x00000002) != 0);
			}

			/**
			 * <code>optional fixed64 end_timestamp = 2;</code>
			 * 
			 * @return The endTimestamp.
			 */
			@java.lang.Override
			public long getEndTimestamp() {
				return endTimestamp_;
			}

			/**
			 * <code>optional fixed64 end_timestamp = 2;</code>
			 * 
			 * @param value The endTimestamp to set.
			 * @return This builder for chaining.
			 */
			public Builder setEndTimestamp(long value) {
				bitField0_ |= 0x00000002;
				endTimestamp_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional fixed64 end_timestamp = 2;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearEndTimestamp() {
				bitField0_ = (bitField0_ & ~0x00000002);
				endTimestamp_ = 0L;
				onChanged();
				return this;
			}

			private java.lang.Object region_ = "";

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @return Whether the region field is set.
			 */
			public boolean hasRegion() {
				return ((bitField0_ & 0x00000004) != 0);
			}

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @return The region.
			 */
			public java.lang.String getRegion() {
				java.lang.Object ref = region_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						region_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @return The bytes for region.
			 */
			public com.google.protobuf.ByteString getRegionBytes() {
				java.lang.Object ref = region_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					region_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @param value The region to set.
			 * @return This builder for chaining.
			 */
			public Builder setRegion(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				region_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearRegion() {
				bitField0_ = (bitField0_ & ~0x00000004);
				region_ = getDefaultInstance().getRegion();
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Region for which these keys came from, such as country.
			 * </pre>
			 *
			 * <code>optional string region = 3;</code>
			 * 
			 * @param value The bytes for region to set.
			 * @return This builder for chaining.
			 */
			public Builder setRegionBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				region_ = value;
				onChanged();
				return this;
			}

			private int batchNum_;

			/**
			 * <pre>
			 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
			 * Note: Not yet supported on iOS.
			 * </pre>
			 *
			 * <code>optional int32 batch_num = 4;</code>
			 * 
			 * @return Whether the batchNum field is set.
			 */
			@java.lang.Override
			public boolean hasBatchNum() {
				return ((bitField0_ & 0x00000008) != 0);
			}

			/**
			 * <pre>
			 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
			 * Note: Not yet supported on iOS.
			 * </pre>
			 *
			 * <code>optional int32 batch_num = 4;</code>
			 * 
			 * @return The batchNum.
			 */
			@java.lang.Override
			public int getBatchNum() {
				return batchNum_;
			}

			/**
			 * <pre>
			 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
			 * Note: Not yet supported on iOS.
			 * </pre>
			 *
			 * <code>optional int32 batch_num = 4;</code>
			 * 
			 * @param value The batchNum to set.
			 * @return This builder for chaining.
			 */
			public Builder setBatchNum(int value) {
				bitField0_ |= 0x00000008;
				batchNum_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * For example, file 2 in batch size of 10. Ordinal, 1-based numbering.
			 * Note: Not yet supported on iOS.
			 * </pre>
			 *
			 * <code>optional int32 batch_num = 4;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearBatchNum() {
				bitField0_ = (bitField0_ & ~0x00000008);
				batchNum_ = 0;
				onChanged();
				return this;
			}

			private int batchSize_;

			/**
			 * <code>optional int32 batch_size = 5;</code>
			 * 
			 * @return Whether the batchSize field is set.
			 */
			@java.lang.Override
			public boolean hasBatchSize() {
				return ((bitField0_ & 0x00000010) != 0);
			}

			/**
			 * <code>optional int32 batch_size = 5;</code>
			 * 
			 * @return The batchSize.
			 */
			@java.lang.Override
			public int getBatchSize() {
				return batchSize_;
			}

			/**
			 * <code>optional int32 batch_size = 5;</code>
			 * 
			 * @param value The batchSize to set.
			 * @return This builder for chaining.
			 */
			public Builder setBatchSize(int value) {
				bitField0_ |= 0x00000010;
				batchSize_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional int32 batch_size = 5;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearBatchSize() {
				bitField0_ = (bitField0_ & ~0x00000010);
				batchSize_ = 0;
				onChanged();
				return this;
			}

			private java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo> signatureInfos_ = java.util.Collections
					.emptyList();

			private void ensureSignatureInfosIsMutable() {
				if (!((bitField0_ & 0x00000020) != 0)) {
					signatureInfos_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.SignatureInfo>(
							signatureInfos_);
					bitField0_ |= 0x00000020;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.SignatureInfo, TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder, TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder> signatureInfosBuilder_;

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo> getSignatureInfosList() {
				if (signatureInfosBuilder_ == null) {
					return java.util.Collections.unmodifiableList(signatureInfos_);
				} else {
					return signatureInfosBuilder_.getMessageList();
				}
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public int getSignatureInfosCount() {
				if (signatureInfosBuilder_ == null) {
					return signatureInfos_.size();
				} else {
					return signatureInfosBuilder_.getCount();
				}
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.SignatureInfo getSignatureInfos(int index) {
				if (signatureInfosBuilder_ == null) {
					return signatureInfos_.get(index);
				} else {
					return signatureInfosBuilder_.getMessage(index);
				}
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder setSignatureInfos(int index, TemporaryExposureKeyExportOuterClass.SignatureInfo value) {
				if (signatureInfosBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSignatureInfosIsMutable();
					signatureInfos_.set(index, value);
					onChanged();
				} else {
					signatureInfosBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder setSignatureInfos(int index,
					TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder builderForValue) {
				if (signatureInfosBuilder_ == null) {
					ensureSignatureInfosIsMutable();
					signatureInfos_.set(index, builderForValue.build());
					onChanged();
				} else {
					signatureInfosBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder addSignatureInfos(TemporaryExposureKeyExportOuterClass.SignatureInfo value) {
				if (signatureInfosBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSignatureInfosIsMutable();
					signatureInfos_.add(value);
					onChanged();
				} else {
					signatureInfosBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder addSignatureInfos(int index, TemporaryExposureKeyExportOuterClass.SignatureInfo value) {
				if (signatureInfosBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSignatureInfosIsMutable();
					signatureInfos_.add(index, value);
					onChanged();
				} else {
					signatureInfosBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder addSignatureInfos(
					TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder builderForValue) {
				if (signatureInfosBuilder_ == null) {
					ensureSignatureInfosIsMutable();
					signatureInfos_.add(builderForValue.build());
					onChanged();
				} else {
					signatureInfosBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder addSignatureInfos(int index,
					TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder builderForValue) {
				if (signatureInfosBuilder_ == null) {
					ensureSignatureInfosIsMutable();
					signatureInfos_.add(index, builderForValue.build());
					onChanged();
				} else {
					signatureInfosBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder addAllSignatureInfos(
					java.lang.Iterable<? extends TemporaryExposureKeyExportOuterClass.SignatureInfo> values) {
				if (signatureInfosBuilder_ == null) {
					ensureSignatureInfosIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(values, signatureInfos_);
					onChanged();
				} else {
					signatureInfosBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder clearSignatureInfos() {
				if (signatureInfosBuilder_ == null) {
					signatureInfos_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000020);
					onChanged();
				} else {
					signatureInfosBuilder_.clear();
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public Builder removeSignatureInfos(int index) {
				if (signatureInfosBuilder_ == null) {
					ensureSignatureInfosIsMutable();
					signatureInfos_.remove(index);
					onChanged();
				} else {
					signatureInfosBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder getSignatureInfosBuilder(int index) {
				return getSignatureInfosFieldBuilder().getBuilder(index);
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder getSignatureInfosOrBuilder(int index) {
				if (signatureInfosBuilder_ == null) {
					return signatureInfos_.get(index);
				} else {
					return signatureInfosBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public java.util.List<? extends TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder> getSignatureInfosOrBuilderList() {
				if (signatureInfosBuilder_ != null) {
					return signatureInfosBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(signatureInfos_);
				}
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder addSignatureInfosBuilder() {
				return getSignatureInfosFieldBuilder()
						.addBuilder(TemporaryExposureKeyExportOuterClass.SignatureInfo.getDefaultInstance());
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder addSignatureInfosBuilder(int index) {
				return getSignatureInfosFieldBuilder().addBuilder(index,
						TemporaryExposureKeyExportOuterClass.SignatureInfo.getDefaultInstance());
			}

			/**
			 * <pre>
			 * Information about associated signatures
			 * </pre>
			 *
			 * <code>repeated .SignatureInfo signature_infos = 6;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder> getSignatureInfosBuilderList() {
				return getSignatureInfosFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.SignatureInfo, TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder, TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder> getSignatureInfosFieldBuilder() {
				if (signatureInfosBuilder_ == null) {
					signatureInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.SignatureInfo, TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder, TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder>(
							signatureInfos_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
					signatureInfos_ = null;
				}
				return signatureInfosBuilder_;
			}

			private java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> keys_ = java.util.Collections
					.emptyList();

			private void ensureKeysIsMutable() {
				if (!((bitField0_ & 0x00000040) != 0)) {
					keys_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey>(keys_);
					bitField0_ |= 0x00000040;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> keysBuilder_;

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getKeysList() {
				if (keysBuilder_ == null) {
					return java.util.Collections.unmodifiableList(keys_);
				} else {
					return keysBuilder_.getMessageList();
				}
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public int getKeysCount() {
				if (keysBuilder_ == null) {
					return keys_.size();
				} else {
					return keysBuilder_.getCount();
				}
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getKeys(int index) {
				if (keysBuilder_ == null) {
					return keys_.get(index);
				} else {
					return keysBuilder_.getMessage(index);
				}
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder setKeys(int index, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (keysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureKeysIsMutable();
					keys_.set(index, value);
					onChanged();
				} else {
					keysBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder setKeys(int index,
					TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (keysBuilder_ == null) {
					ensureKeysIsMutable();
					keys_.set(index, builderForValue.build());
					onChanged();
				} else {
					keysBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder addKeys(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (keysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureKeysIsMutable();
					keys_.add(value);
					onChanged();
				} else {
					keysBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder addKeys(int index, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (keysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureKeysIsMutable();
					keys_.add(index, value);
					onChanged();
				} else {
					keysBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder addKeys(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (keysBuilder_ == null) {
					ensureKeysIsMutable();
					keys_.add(builderForValue.build());
					onChanged();
				} else {
					keysBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder addKeys(int index,
					TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (keysBuilder_ == null) {
					ensureKeysIsMutable();
					keys_.add(index, builderForValue.build());
					onChanged();
				} else {
					keysBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder addAllKeys(
					java.lang.Iterable<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> values) {
				if (keysBuilder_ == null) {
					ensureKeysIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(values, keys_);
					onChanged();
				} else {
					keysBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder clearKeys() {
				if (keysBuilder_ == null) {
					keys_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000040);
					onChanged();
				} else {
					keysBuilder_.clear();
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public Builder removeKeys(int index) {
				if (keysBuilder_ == null) {
					ensureKeysIsMutable();
					keys_.remove(index);
					onChanged();
				} else {
					keysBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder getKeysBuilder(int index) {
				return getKeysFieldBuilder().getBuilder(index);
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getKeysOrBuilder(int index) {
				if (keysBuilder_ == null) {
					return keys_.get(index);
				} else {
					return keysBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getKeysOrBuilderList() {
				if (keysBuilder_ != null) {
					return keysBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(keys_);
				}
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder addKeysBuilder() {
				return getKeysFieldBuilder()
						.addBuilder(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance());
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder addKeysBuilder(int index) {
				return getKeysFieldBuilder().addBuilder(index,
						TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance());
			}

			/**
			 * <pre>
			 * The TemporaryExposureKeys for initial release of keys.
			 * Keys should be included in this list for initial release,
			 * whereas revised or revoked keys should go in revised_keys.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey keys = 7;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder> getKeysBuilderList() {
				return getKeysFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getKeysFieldBuilder() {
				if (keysBuilder_ == null) {
					keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder>(
							keys_, ((bitField0_ & 0x00000040) != 0), getParentForChildren(), isClean());
					keys_ = null;
				}
				return keysBuilder_;
			}

			private java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> revisedKeys_ = java.util.Collections
					.emptyList();

			private void ensureRevisedKeysIsMutable() {
				if (!((bitField0_ & 0x00000080) != 0)) {
					revisedKeys_ = new java.util.ArrayList<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey>(
							revisedKeys_);
					bitField0_ |= 0x00000080;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> revisedKeysBuilder_;

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> getRevisedKeysList() {
				if (revisedKeysBuilder_ == null) {
					return java.util.Collections.unmodifiableList(revisedKeys_);
				} else {
					return revisedKeysBuilder_.getMessageList();
				}
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public int getRevisedKeysCount() {
				if (revisedKeysBuilder_ == null) {
					return revisedKeys_.size();
				} else {
					return revisedKeysBuilder_.getCount();
				}
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getRevisedKeys(int index) {
				if (revisedKeysBuilder_ == null) {
					return revisedKeys_.get(index);
				} else {
					return revisedKeysBuilder_.getMessage(index);
				}
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder setRevisedKeys(int index, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (revisedKeysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRevisedKeysIsMutable();
					revisedKeys_.set(index, value);
					onChanged();
				} else {
					revisedKeysBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder setRevisedKeys(int index,
					TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (revisedKeysBuilder_ == null) {
					ensureRevisedKeysIsMutable();
					revisedKeys_.set(index, builderForValue.build());
					onChanged();
				} else {
					revisedKeysBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder addRevisedKeys(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (revisedKeysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRevisedKeysIsMutable();
					revisedKeys_.add(value);
					onChanged();
				} else {
					revisedKeysBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder addRevisedKeys(int index, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey value) {
				if (revisedKeysBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRevisedKeysIsMutable();
					revisedKeys_.add(index, value);
					onChanged();
				} else {
					revisedKeysBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder addRevisedKeys(
					TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (revisedKeysBuilder_ == null) {
					ensureRevisedKeysIsMutable();
					revisedKeys_.add(builderForValue.build());
					onChanged();
				} else {
					revisedKeysBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder addRevisedKeys(int index,
					TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder builderForValue) {
				if (revisedKeysBuilder_ == null) {
					ensureRevisedKeysIsMutable();
					revisedKeys_.add(index, builderForValue.build());
					onChanged();
				} else {
					revisedKeysBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder addAllRevisedKeys(
					java.lang.Iterable<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKey> values) {
				if (revisedKeysBuilder_ == null) {
					ensureRevisedKeysIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(values, revisedKeys_);
					onChanged();
				} else {
					revisedKeysBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder clearRevisedKeys() {
				if (revisedKeysBuilder_ == null) {
					revisedKeys_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000080);
					onChanged();
				} else {
					revisedKeysBuilder_.clear();
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public Builder removeRevisedKeys(int index) {
				if (revisedKeysBuilder_ == null) {
					ensureRevisedKeysIsMutable();
					revisedKeys_.remove(index);
					onChanged();
				} else {
					revisedKeysBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder getRevisedKeysBuilder(int index) {
				return getRevisedKeysFieldBuilder().getBuilder(index);
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(
					int index) {
				if (revisedKeysBuilder_ == null) {
					return revisedKeys_.get(index);
				} else {
					return revisedKeysBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public java.util.List<? extends TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getRevisedKeysOrBuilderList() {
				if (revisedKeysBuilder_ != null) {
					return revisedKeysBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(revisedKeys_);
				}
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder addRevisedKeysBuilder() {
				return getRevisedKeysFieldBuilder()
						.addBuilder(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance());
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder addRevisedKeysBuilder(int index) {
				return getRevisedKeysFieldBuilder().addBuilder(index,
						TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance());
			}

			/**
			 * <pre>
			 * TemporaryExposureKeys that have changed status.
			 * Keys should be included in this list if they have changed status
			 * or have been revoked.
			 * </pre>
			 *
			 * <code>repeated .TemporaryExposureKey revised_keys = 8;</code>
			 */
			public java.util.List<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder> getRevisedKeysBuilderList() {
				return getRevisedKeysFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder> getRevisedKeysFieldBuilder() {
				if (revisedKeysBuilder_ == null) {
					revisedKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<TemporaryExposureKeyExportOuterClass.TemporaryExposureKey, TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder, TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder>(
							revisedKeys_, ((bitField0_ & 0x00000080) != 0), getParentForChildren(), isClean());
					revisedKeys_ = null;
				}
				return revisedKeysBuilder_;
			}

			@java.lang.Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:TemporaryExposureKeyExport)
		}

		// @@protoc_insertion_point(class_scope:TemporaryExposureKeyExport)
		private static final TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport();
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<TemporaryExposureKeyExport> PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKeyExport>() {
			@java.lang.Override
			public TemporaryExposureKeyExport parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new TemporaryExposureKeyExport(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<TemporaryExposureKeyExport> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<TemporaryExposureKeyExport> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyExport getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface SignatureInfoOrBuilder extends
			// @@protoc_insertion_point(interface_extends:SignatureInfo)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return Whether the verificationKeyVersion field is set.
		 */
		boolean hasVerificationKeyVersion();

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return The verificationKeyVersion.
		 */
		java.lang.String getVerificationKeyVersion();

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return The bytes for verificationKeyVersion.
		 */
		com.google.protobuf.ByteString getVerificationKeyVersionBytes();

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return Whether the verificationKeyId field is set.
		 */
		boolean hasVerificationKeyId();

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return The verificationKeyId.
		 */
		java.lang.String getVerificationKeyId();

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return The bytes for verificationKeyId.
		 */
		com.google.protobuf.ByteString getVerificationKeyIdBytes();

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return Whether the signatureAlgorithm field is set.
		 */
		boolean hasSignatureAlgorithm();

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return The signatureAlgorithm.
		 */
		java.lang.String getSignatureAlgorithm();

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return The bytes for signatureAlgorithm.
		 */
		com.google.protobuf.ByteString getSignatureAlgorithmBytes();
	}

	/**
	 * Protobuf type {@code SignatureInfo}
	 */
	public static final class SignatureInfo extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:SignatureInfo)
			SignatureInfoOrBuilder {
		private static final long serialVersionUID = 0L;

		// Use SignatureInfo.newBuilder() to construct.
		private SignatureInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private SignatureInfo() {
			verificationKeyVersion_ = "";
			verificationKeyId_ = "";
			signatureAlgorithm_ = "";
		}

		@java.lang.Override
		@SuppressWarnings({ "unused" })
		protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
			return new SignatureInfo();
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private SignatureInfo(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					case 26: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000001;
						verificationKeyVersion_ = bs;
						break;
					}
					case 34: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000002;
						verificationKeyId_ = bs;
						break;
					}
					case 42: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000004;
						signatureAlgorithm_ = bs;
						break;
					}
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return TemporaryExposureKeyExportOuterClass.internal_static_SignatureInfo_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return TemporaryExposureKeyExportOuterClass.internal_static_SignatureInfo_fieldAccessorTable
					.ensureFieldAccessorsInitialized(TemporaryExposureKeyExportOuterClass.SignatureInfo.class,
							TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder.class);
		}

		private int bitField0_;
		public static final int VERIFICATION_KEY_VERSION_FIELD_NUMBER = 3;
		private volatile java.lang.Object verificationKeyVersion_;

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return Whether the verificationKeyVersion field is set.
		 */
		@java.lang.Override
		public boolean hasVerificationKeyVersion() {
			return ((bitField0_ & 0x00000001) != 0);
		}

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return The verificationKeyVersion.
		 */
		@java.lang.Override
		public java.lang.String getVerificationKeyVersion() {
			java.lang.Object ref = verificationKeyVersion_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					verificationKeyVersion_ = s;
				}
				return s;
			}
		}

		/**
		 * <pre>
		 * Key version for rollovers
		 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
		 * </pre>
		 *
		 * <code>optional string verification_key_version = 3;</code>
		 * 
		 * @return The bytes for verificationKeyVersion.
		 */
		@java.lang.Override
		public com.google.protobuf.ByteString getVerificationKeyVersionBytes() {
			java.lang.Object ref = verificationKeyVersion_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				verificationKeyVersion_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int VERIFICATION_KEY_ID_FIELD_NUMBER = 4;
		private volatile java.lang.Object verificationKeyId_;

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return Whether the verificationKeyId field is set.
		 */
		@java.lang.Override
		public boolean hasVerificationKeyId() {
			return ((bitField0_ & 0x00000002) != 0);
		}

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return The verificationKeyId.
		 */
		@java.lang.Override
		public java.lang.String getVerificationKeyId() {
			java.lang.Object ref = verificationKeyId_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					verificationKeyId_ = s;
				}
				return s;
			}
		}

		/**
		 * <pre>
		 * Alias with which to identify public key to be used for verification
		 * Must be in character class [a-zA-Z0-9_.]
		 * For cross-compatibility with Apple, you can use your region's three-digit
		 * mobile country code (MCC). If your region has more than one MCC, choose the
		 * one that Apple has configured.
		 * </pre>
		 *
		 * <code>optional string verification_key_id = 4;</code>
		 * 
		 * @return The bytes for verificationKeyId.
		 */
		@java.lang.Override
		public com.google.protobuf.ByteString getVerificationKeyIdBytes() {
			java.lang.Object ref = verificationKeyId_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				verificationKeyId_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 5;
		private volatile java.lang.Object signatureAlgorithm_;

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return Whether the signatureAlgorithm field is set.
		 */
		@java.lang.Override
		public boolean hasSignatureAlgorithm() {
			return ((bitField0_ & 0x00000004) != 0);
		}

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return The signatureAlgorithm.
		 */
		@java.lang.Override
		public java.lang.String getSignatureAlgorithm() {
			java.lang.Object ref = signatureAlgorithm_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					signatureAlgorithm_ = s;
				}
				return s;
			}
		}

		/**
		 * <pre>
		 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
		 * </pre>
		 *
		 * <code>optional string signature_algorithm = 5;</code>
		 * 
		 * @return The bytes for signatureAlgorithm.
		 */
		@java.lang.Override
		public com.google.protobuf.ByteString getSignatureAlgorithmBytes() {
			java.lang.Object ref = signatureAlgorithm_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				signatureAlgorithm_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		private byte memoizedIsInitialized = -1;

		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) != 0)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 3, verificationKeyVersion_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 4, verificationKeyId_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 5, signatureAlgorithm_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) != 0)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, verificationKeyVersion_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, verificationKeyId_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, signatureAlgorithm_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof TemporaryExposureKeyExportOuterClass.SignatureInfo)) {
				return super.equals(obj);
			}
			TemporaryExposureKeyExportOuterClass.SignatureInfo other = (TemporaryExposureKeyExportOuterClass.SignatureInfo) obj;

			if (hasVerificationKeyVersion() != other.hasVerificationKeyVersion())
				return false;
			if (hasVerificationKeyVersion()) {
				if (!getVerificationKeyVersion().equals(other.getVerificationKeyVersion()))
					return false;
			}
			if (hasVerificationKeyId() != other.hasVerificationKeyId())
				return false;
			if (hasVerificationKeyId()) {
				if (!getVerificationKeyId().equals(other.getVerificationKeyId()))
					return false;
			}
			if (hasSignatureAlgorithm() != other.hasSignatureAlgorithm())
				return false;
			if (hasSignatureAlgorithm()) {
				if (!getSignatureAlgorithm().equals(other.getSignatureAlgorithm()))
					return false;
			}
			if (!unknownFields.equals(other.unknownFields))
				return false;
			return true;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasVerificationKeyVersion()) {
				hash = (37 * hash) + VERIFICATION_KEY_VERSION_FIELD_NUMBER;
				hash = (53 * hash) + getVerificationKeyVersion().hashCode();
			}
			if (hasVerificationKeyId()) {
				hash = (37 * hash) + VERIFICATION_KEY_ID_FIELD_NUMBER;
				hash = (53 * hash) + getVerificationKeyId().hashCode();
			}
			if (hasSignatureAlgorithm()) {
				hash = (37 * hash) + SIGNATURE_ALGORITHM_FIELD_NUMBER;
				hash = (53 * hash) + getSignatureAlgorithm().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseDelimitedFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(TemporaryExposureKeyExportOuterClass.SignatureInfo prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code SignatureInfo}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:SignatureInfo)
				TemporaryExposureKeyExportOuterClass.SignatureInfoOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return TemporaryExposureKeyExportOuterClass.internal_static_SignatureInfo_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return TemporaryExposureKeyExportOuterClass.internal_static_SignatureInfo_fieldAccessorTable
						.ensureFieldAccessorsInitialized(TemporaryExposureKeyExportOuterClass.SignatureInfo.class,
								TemporaryExposureKeyExportOuterClass.SignatureInfo.Builder.class);
			}

			// Construct using
			// TemporaryExposureKeyExportOuterClass.SignatureInfo.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
				}
			}

			@java.lang.Override
			public Builder clear() {
				super.clear();
				verificationKeyVersion_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				verificationKeyId_ = "";
				bitField0_ = (bitField0_ & ~0x00000002);
				signatureAlgorithm_ = "";
				bitField0_ = (bitField0_ & ~0x00000004);
				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return TemporaryExposureKeyExportOuterClass.internal_static_SignatureInfo_descriptor;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.SignatureInfo getDefaultInstanceForType() {
				return TemporaryExposureKeyExportOuterClass.SignatureInfo.getDefaultInstance();
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.SignatureInfo build() {
				TemporaryExposureKeyExportOuterClass.SignatureInfo result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.SignatureInfo buildPartial() {
				TemporaryExposureKeyExportOuterClass.SignatureInfo result = new TemporaryExposureKeyExportOuterClass.SignatureInfo(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) != 0)) {
					to_bitField0_ |= 0x00000001;
				}
				result.verificationKeyVersion_ = verificationKeyVersion_;
				if (((from_bitField0_ & 0x00000002) != 0)) {
					to_bitField0_ |= 0x00000002;
				}
				result.verificationKeyId_ = verificationKeyId_;
				if (((from_bitField0_ & 0x00000004) != 0)) {
					to_bitField0_ |= 0x00000004;
				}
				result.signatureAlgorithm_ = signatureAlgorithm_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return super.clone();
			}

			@java.lang.Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
				return super.setField(field, value);
			}

			@java.lang.Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@java.lang.Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@java.lang.Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					java.lang.Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@java.lang.Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return super.addRepeatedField(field, value);
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof TemporaryExposureKeyExportOuterClass.SignatureInfo) {
					return mergeFrom((TemporaryExposureKeyExportOuterClass.SignatureInfo) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(TemporaryExposureKeyExportOuterClass.SignatureInfo other) {
				if (other == TemporaryExposureKeyExportOuterClass.SignatureInfo.getDefaultInstance())
					return this;
				if (other.hasVerificationKeyVersion()) {
					bitField0_ |= 0x00000001;
					verificationKeyVersion_ = other.verificationKeyVersion_;
					onChanged();
				}
				if (other.hasVerificationKeyId()) {
					bitField0_ |= 0x00000002;
					verificationKeyId_ = other.verificationKeyId_;
					onChanged();
				}
				if (other.hasSignatureAlgorithm()) {
					bitField0_ |= 0x00000004;
					signatureAlgorithm_ = other.signatureAlgorithm_;
					onChanged();
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				TemporaryExposureKeyExportOuterClass.SignatureInfo parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (TemporaryExposureKeyExportOuterClass.SignatureInfo) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private java.lang.Object verificationKeyVersion_ = "";

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @return Whether the verificationKeyVersion field is set.
			 */
			public boolean hasVerificationKeyVersion() {
				return ((bitField0_ & 0x00000001) != 0);
			}

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @return The verificationKeyVersion.
			 */
			public java.lang.String getVerificationKeyVersion() {
				java.lang.Object ref = verificationKeyVersion_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						verificationKeyVersion_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @return The bytes for verificationKeyVersion.
			 */
			public com.google.protobuf.ByteString getVerificationKeyVersionBytes() {
				java.lang.Object ref = verificationKeyVersion_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					verificationKeyVersion_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @param value The verificationKeyVersion to set.
			 * @return This builder for chaining.
			 */
			public Builder setVerificationKeyVersion(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				verificationKeyVersion_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearVerificationKeyVersion() {
				bitField0_ = (bitField0_ & ~0x00000001);
				verificationKeyVersion_ = getDefaultInstance().getVerificationKeyVersion();
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Key version for rollovers
			 * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
			 * </pre>
			 *
			 * <code>optional string verification_key_version = 3;</code>
			 * 
			 * @param value The bytes for verificationKeyVersion to set.
			 * @return This builder for chaining.
			 */
			public Builder setVerificationKeyVersionBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				verificationKeyVersion_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object verificationKeyId_ = "";

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @return Whether the verificationKeyId field is set.
			 */
			public boolean hasVerificationKeyId() {
				return ((bitField0_ & 0x00000002) != 0);
			}

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @return The verificationKeyId.
			 */
			public java.lang.String getVerificationKeyId() {
				java.lang.Object ref = verificationKeyId_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						verificationKeyId_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @return The bytes for verificationKeyId.
			 */
			public com.google.protobuf.ByteString getVerificationKeyIdBytes() {
				java.lang.Object ref = verificationKeyId_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					verificationKeyId_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @param value The verificationKeyId to set.
			 * @return This builder for chaining.
			 */
			public Builder setVerificationKeyId(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				verificationKeyId_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearVerificationKeyId() {
				bitField0_ = (bitField0_ & ~0x00000002);
				verificationKeyId_ = getDefaultInstance().getVerificationKeyId();
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Alias with which to identify public key to be used for verification
			 * Must be in character class [a-zA-Z0-9_.]
			 * For cross-compatibility with Apple, you can use your region's three-digit
			 * mobile country code (MCC). If your region has more than one MCC, choose the
			 * one that Apple has configured.
			 * </pre>
			 *
			 * <code>optional string verification_key_id = 4;</code>
			 * 
			 * @param value The bytes for verificationKeyId to set.
			 * @return This builder for chaining.
			 */
			public Builder setVerificationKeyIdBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				verificationKeyId_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object signatureAlgorithm_ = "";

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @return Whether the signatureAlgorithm field is set.
			 */
			public boolean hasSignatureAlgorithm() {
				return ((bitField0_ & 0x00000004) != 0);
			}

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @return The signatureAlgorithm.
			 */
			public java.lang.String getSignatureAlgorithm() {
				java.lang.Object ref = signatureAlgorithm_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						signatureAlgorithm_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @return The bytes for signatureAlgorithm.
			 */
			public com.google.protobuf.ByteString getSignatureAlgorithmBytes() {
				java.lang.Object ref = signatureAlgorithm_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					signatureAlgorithm_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @param value The signatureAlgorithm to set.
			 * @return This builder for chaining.
			 */
			public Builder setSignatureAlgorithm(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				signatureAlgorithm_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearSignatureAlgorithm() {
				bitField0_ = (bitField0_ & ~0x00000004);
				signatureAlgorithm_ = getDefaultInstance().getSignatureAlgorithm();
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
			 * </pre>
			 *
			 * <code>optional string signature_algorithm = 5;</code>
			 * 
			 * @param value The bytes for signatureAlgorithm to set.
			 * @return This builder for chaining.
			 */
			public Builder setSignatureAlgorithmBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				signatureAlgorithm_ = value;
				onChanged();
				return this;
			}

			@java.lang.Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:SignatureInfo)
		}

		// @@protoc_insertion_point(class_scope:SignatureInfo)
		private static final TemporaryExposureKeyExportOuterClass.SignatureInfo DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new TemporaryExposureKeyExportOuterClass.SignatureInfo();
		}

		public static TemporaryExposureKeyExportOuterClass.SignatureInfo getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<SignatureInfo> PARSER = new com.google.protobuf.AbstractParser<SignatureInfo>() {
			@java.lang.Override
			public SignatureInfo parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new SignatureInfo(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<SignatureInfo> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<SignatureInfo> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.SignatureInfo getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface TemporaryExposureKeyOrBuilder extends
			// @@protoc_insertion_point(interface_extends:TemporaryExposureKey)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Key of infected user
		 * </pre>
		 *
		 * <code>optional bytes key_data = 1;</code>
		 * 
		 * @return Whether the keyData field is set.
		 */
		boolean hasKeyData();

		/**
		 * <pre>
		 * Key of infected user
		 * </pre>
		 *
		 * <code>optional bytes key_data = 1;</code>
		 * 
		 * @return The keyData.
		 */
		com.google.protobuf.ByteString getKeyData();

		/**
		 * <pre>
		 * Varying risk associated with a key depending on diagnosis method
		 * </pre>
		 *
		 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
		 * 
		 * @return Whether the transmissionRiskLevel field is set.
		 */
		@java.lang.Deprecated
		boolean hasTransmissionRiskLevel();

		/**
		 * <pre>
		 * Varying risk associated with a key depending on diagnosis method
		 * </pre>
		 *
		 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
		 * 
		 * @return The transmissionRiskLevel.
		 */
		@java.lang.Deprecated
		int getTransmissionRiskLevel();

		/**
		 * <pre>
		 * The interval number since epoch for which a key starts
		 * </pre>
		 *
		 * <code>optional int32 rolling_start_interval_number = 3;</code>
		 * 
		 * @return Whether the rollingStartIntervalNumber field is set.
		 */
		boolean hasRollingStartIntervalNumber();

		/**
		 * <pre>
		 * The interval number since epoch for which a key starts
		 * </pre>
		 *
		 * <code>optional int32 rolling_start_interval_number = 3;</code>
		 * 
		 * @return The rollingStartIntervalNumber.
		 */
		int getRollingStartIntervalNumber();

		/**
		 * <pre>
		 * Increments of 10 minutes describing how long a key is valid
		 * </pre>
		 *
		 * <code>optional int32 rolling_period = 4 [default = 144];</code>
		 * 
		 * @return Whether the rollingPeriod field is set.
		 */
		boolean hasRollingPeriod();

		/**
		 * <pre>
		 * Increments of 10 minutes describing how long a key is valid
		 * </pre>
		 *
		 * <code>optional int32 rolling_period = 4 [default = 144];</code>
		 * 
		 * @return The rollingPeriod.
		 */
		int getRollingPeriod();

		/**
		 * <pre>
		 * Type of diagnosis associated with a key.
		 * </pre>
		 *
		 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
		 * 
		 * @return Whether the reportType field is set.
		 */
		boolean hasReportType();

		/**
		 * <pre>
		 * Type of diagnosis associated with a key.
		 * </pre>
		 *
		 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
		 * 
		 * @return The reportType.
		 */
		TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType getReportType();

		/**
		 * <pre>
		 * Number of days elapsed between symptom onset and the TEK being used.
		 * E.g. 2 means TEK is 2 days after onset of symptoms.
		 * </pre>
		 *
		 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
		 * 
		 * @return Whether the daysSinceOnsetOfSymptoms field is set.
		 */
		boolean hasDaysSinceOnsetOfSymptoms();

		/**
		 * <pre>
		 * Number of days elapsed between symptom onset and the TEK being used.
		 * E.g. 2 means TEK is 2 days after onset of symptoms.
		 * </pre>
		 *
		 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
		 * 
		 * @return The daysSinceOnsetOfSymptoms.
		 */
		int getDaysSinceOnsetOfSymptoms();
	}

	/**
	 * Protobuf type {@code TemporaryExposureKey}
	 */
	public static final class TemporaryExposureKey extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:TemporaryExposureKey)
			TemporaryExposureKeyOrBuilder {
		private static final long serialVersionUID = 0L;

		// Use TemporaryExposureKey.newBuilder() to construct.
		private TemporaryExposureKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private TemporaryExposureKey() {
			keyData_ = com.google.protobuf.ByteString.EMPTY;
			rollingPeriod_ = 144;
			reportType_ = 0;
		}

		@java.lang.Override
		@SuppressWarnings({ "unused" })
		protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
			return new TemporaryExposureKey();
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private TemporaryExposureKey(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					case 10: {
						bitField0_ |= 0x00000001;
						keyData_ = input.readBytes();
						break;
					}
					case 16: {
						bitField0_ |= 0x00000002;
						transmissionRiskLevel_ = input.readInt32();
						break;
					}
					case 24: {
						bitField0_ |= 0x00000004;
						rollingStartIntervalNumber_ = input.readInt32();
						break;
					}
					case 32: {
						bitField0_ |= 0x00000008;
						rollingPeriod_ = input.readInt32();
						break;
					}
					case 40: {
						int rawValue = input.readEnum();
						@SuppressWarnings("deprecation")
						TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType value = TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType
								.valueOf(rawValue);
						if (value == null) {
							unknownFields.mergeVarintField(5, rawValue);
						} else {
							bitField0_ |= 0x00000010;
							reportType_ = rawValue;
						}
						break;
					}
					case 48: {
						bitField0_ |= 0x00000020;
						daysSinceOnsetOfSymptoms_ = input.readSInt32();
						break;
					}
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKey_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKey_fieldAccessorTable
					.ensureFieldAccessorsInitialized(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.class,
							TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder.class);
		}

		/**
		 * <pre>
		 * Data type representing why this key was published.
		 * </pre>
		 *
		 * Protobuf enum {@code TemporaryExposureKey.ReportType}
		 */
		public enum ReportType implements com.google.protobuf.ProtocolMessageEnum {
			/**
			 * <pre>
			 * Never returned by the client API.
			 * </pre>
			 *
			 * <code>UNKNOWN = 0;</code>
			 */
			UNKNOWN(0),
			/**
			 * <code>CONFIRMED_TEST = 1;</code>
			 */
			CONFIRMED_TEST(1),
			/**
			 * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
			 */
			CONFIRMED_CLINICAL_DIAGNOSIS(2),
			/**
			 * <code>SELF_REPORT = 3;</code>
			 */
			SELF_REPORT(3),
			/**
			 * <pre>
			 * Reserved for future use.
			 * </pre>
			 *
			 * <code>RECURSIVE = 4;</code>
			 */
			RECURSIVE(4),
			/**
			 * <pre>
			 * Used to revoke a key, never returned by client API.
			 * </pre>
			 *
			 * <code>REVOKED = 5;</code>
			 */
			REVOKED(5),;

			/**
			 * <pre>
			 * Never returned by the client API.
			 * </pre>
			 *
			 * <code>UNKNOWN = 0;</code>
			 */
			public static final int UNKNOWN_VALUE = 0;
			/**
			 * <code>CONFIRMED_TEST = 1;</code>
			 */
			public static final int CONFIRMED_TEST_VALUE = 1;
			/**
			 * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
			 */
			public static final int CONFIRMED_CLINICAL_DIAGNOSIS_VALUE = 2;
			/**
			 * <code>SELF_REPORT = 3;</code>
			 */
			public static final int SELF_REPORT_VALUE = 3;
			/**
			 * <pre>
			 * Reserved for future use.
			 * </pre>
			 *
			 * <code>RECURSIVE = 4;</code>
			 */
			public static final int RECURSIVE_VALUE = 4;
			/**
			 * <pre>
			 * Used to revoke a key, never returned by client API.
			 * </pre>
			 *
			 * <code>REVOKED = 5;</code>
			 */
			public static final int REVOKED_VALUE = 5;

			public final int getNumber() {
				return value;
			}

			/**
			 * @param value The numeric wire value of the corresponding enum entry.
			 * @return The enum associated with the given numeric wire value.
			 * @deprecated Use {@link #forNumber(int)} instead.
			 */
			@java.lang.Deprecated
			public static ReportType valueOf(int value) {
				return forNumber(value);
			}

			/**
			 * @param value The numeric wire value of the corresponding enum entry.
			 * @return The enum associated with the given numeric wire value.
			 */
			public static ReportType forNumber(int value) {
				switch (value) {
				case 0:
					return UNKNOWN;
				case 1:
					return CONFIRMED_TEST;
				case 2:
					return CONFIRMED_CLINICAL_DIAGNOSIS;
				case 3:
					return SELF_REPORT;
				case 4:
					return RECURSIVE;
				case 5:
					return REVOKED;
				default:
					return null;
				}
			}

			public static com.google.protobuf.Internal.EnumLiteMap<ReportType> internalGetValueMap() {
				return internalValueMap;
			}

			private static final com.google.protobuf.Internal.EnumLiteMap<ReportType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<ReportType>() {
				public ReportType findValueByNumber(int number) {
					return ReportType.forNumber(number);
				}
			};

			public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
				return getDescriptor().getValues().get(ordinal());
			}

			public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
				return getDescriptor();
			}

			public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
				return TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDescriptor().getEnumTypes().get(0);
			}

			private static final ReportType[] VALUES = values();

			public static ReportType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
				if (desc.getType() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
				}
				return VALUES[desc.getIndex()];
			}

			private final int value;

			private ReportType(int value) {
				this.value = value;
			}

			// @@protoc_insertion_point(enum_scope:TemporaryExposureKey.ReportType)
		}

		private int bitField0_;
		public static final int KEY_DATA_FIELD_NUMBER = 1;
		private com.google.protobuf.ByteString keyData_;

		/**
		 * <pre>
		 * Key of infected user
		 * </pre>
		 *
		 * <code>optional bytes key_data = 1;</code>
		 * 
		 * @return Whether the keyData field is set.
		 */
		@java.lang.Override
		public boolean hasKeyData() {
			return ((bitField0_ & 0x00000001) != 0);
		}

		/**
		 * <pre>
		 * Key of infected user
		 * </pre>
		 *
		 * <code>optional bytes key_data = 1;</code>
		 * 
		 * @return The keyData.
		 */
		@java.lang.Override
		public com.google.protobuf.ByteString getKeyData() {
			return keyData_;
		}

		public static final int TRANSMISSION_RISK_LEVEL_FIELD_NUMBER = 2;
		private int transmissionRiskLevel_;

		/**
		 * <pre>
		 * Varying risk associated with a key depending on diagnosis method
		 * </pre>
		 *
		 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
		 * 
		 * @return Whether the transmissionRiskLevel field is set.
		 */
		@java.lang.Override
		@java.lang.Deprecated
		public boolean hasTransmissionRiskLevel() {
			return ((bitField0_ & 0x00000002) != 0);
		}

		/**
		 * <pre>
		 * Varying risk associated with a key depending on diagnosis method
		 * </pre>
		 *
		 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
		 * 
		 * @return The transmissionRiskLevel.
		 */
		@java.lang.Override
		@java.lang.Deprecated
		public int getTransmissionRiskLevel() {
			return transmissionRiskLevel_;
		}

		public static final int ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER = 3;
		private int rollingStartIntervalNumber_;

		/**
		 * <pre>
		 * The interval number since epoch for which a key starts
		 * </pre>
		 *
		 * <code>optional int32 rolling_start_interval_number = 3;</code>
		 * 
		 * @return Whether the rollingStartIntervalNumber field is set.
		 */
		@java.lang.Override
		public boolean hasRollingStartIntervalNumber() {
			return ((bitField0_ & 0x00000004) != 0);
		}

		/**
		 * <pre>
		 * The interval number since epoch for which a key starts
		 * </pre>
		 *
		 * <code>optional int32 rolling_start_interval_number = 3;</code>
		 * 
		 * @return The rollingStartIntervalNumber.
		 */
		@java.lang.Override
		public int getRollingStartIntervalNumber() {
			return rollingStartIntervalNumber_;
		}

		public static final int ROLLING_PERIOD_FIELD_NUMBER = 4;
		private int rollingPeriod_;

		/**
		 * <pre>
		 * Increments of 10 minutes describing how long a key is valid
		 * </pre>
		 *
		 * <code>optional int32 rolling_period = 4 [default = 144];</code>
		 * 
		 * @return Whether the rollingPeriod field is set.
		 */
		@java.lang.Override
		public boolean hasRollingPeriod() {
			return ((bitField0_ & 0x00000008) != 0);
		}

		/**
		 * <pre>
		 * Increments of 10 minutes describing how long a key is valid
		 * </pre>
		 *
		 * <code>optional int32 rolling_period = 4 [default = 144];</code>
		 * 
		 * @return The rollingPeriod.
		 */
		@java.lang.Override
		public int getRollingPeriod() {
			return rollingPeriod_;
		}

		public static final int REPORT_TYPE_FIELD_NUMBER = 5;
		private int reportType_;

		/**
		 * <pre>
		 * Type of diagnosis associated with a key.
		 * </pre>
		 *
		 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
		 * 
		 * @return Whether the reportType field is set.
		 */
		@java.lang.Override
		public boolean hasReportType() {
			return ((bitField0_ & 0x00000010) != 0);
		}

		/**
		 * <pre>
		 * Type of diagnosis associated with a key.
		 * </pre>
		 *
		 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
		 * 
		 * @return The reportType.
		 */
		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType getReportType() {
			@SuppressWarnings("deprecation")
			TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType result = TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType
					.valueOf(reportType_);
			return result == null ? TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType.UNKNOWN
					: result;
		}

		public static final int DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER = 6;
		private int daysSinceOnsetOfSymptoms_;

		/**
		 * <pre>
		 * Number of days elapsed between symptom onset and the TEK being used.
		 * E.g. 2 means TEK is 2 days after onset of symptoms.
		 * </pre>
		 *
		 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
		 * 
		 * @return Whether the daysSinceOnsetOfSymptoms field is set.
		 */
		@java.lang.Override
		public boolean hasDaysSinceOnsetOfSymptoms() {
			return ((bitField0_ & 0x00000020) != 0);
		}

		/**
		 * <pre>
		 * Number of days elapsed between symptom onset and the TEK being used.
		 * E.g. 2 means TEK is 2 days after onset of symptoms.
		 * </pre>
		 *
		 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
		 * 
		 * @return The daysSinceOnsetOfSymptoms.
		 */
		@java.lang.Override
		public int getDaysSinceOnsetOfSymptoms() {
			return daysSinceOnsetOfSymptoms_;
		}

		private byte memoizedIsInitialized = -1;

		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) != 0)) {
				output.writeBytes(1, keyData_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				output.writeInt32(2, transmissionRiskLevel_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				output.writeInt32(3, rollingStartIntervalNumber_);
			}
			if (((bitField0_ & 0x00000008) != 0)) {
				output.writeInt32(4, rollingPeriod_);
			}
			if (((bitField0_ & 0x00000010) != 0)) {
				output.writeEnum(5, reportType_);
			}
			if (((bitField0_ & 0x00000020) != 0)) {
				output.writeSInt32(6, daysSinceOnsetOfSymptoms_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, keyData_);
			}
			if (((bitField0_ & 0x00000002) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, transmissionRiskLevel_);
			}
			if (((bitField0_ & 0x00000004) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, rollingStartIntervalNumber_);
			}
			if (((bitField0_ & 0x00000008) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, rollingPeriod_);
			}
			if (((bitField0_ & 0x00000010) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeEnumSize(5, reportType_);
			}
			if (((bitField0_ & 0x00000020) != 0)) {
				size += com.google.protobuf.CodedOutputStream.computeSInt32Size(6, daysSinceOnsetOfSymptoms_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof TemporaryExposureKeyExportOuterClass.TemporaryExposureKey)) {
				return super.equals(obj);
			}
			TemporaryExposureKeyExportOuterClass.TemporaryExposureKey other = (TemporaryExposureKeyExportOuterClass.TemporaryExposureKey) obj;

			if (hasKeyData() != other.hasKeyData())
				return false;
			if (hasKeyData()) {
				if (!getKeyData().equals(other.getKeyData()))
					return false;
			}
			if (hasTransmissionRiskLevel() != other.hasTransmissionRiskLevel())
				return false;
			if (hasTransmissionRiskLevel()) {
				if (getTransmissionRiskLevel() != other.getTransmissionRiskLevel())
					return false;
			}
			if (hasRollingStartIntervalNumber() != other.hasRollingStartIntervalNumber())
				return false;
			if (hasRollingStartIntervalNumber()) {
				if (getRollingStartIntervalNumber() != other.getRollingStartIntervalNumber())
					return false;
			}
			if (hasRollingPeriod() != other.hasRollingPeriod())
				return false;
			if (hasRollingPeriod()) {
				if (getRollingPeriod() != other.getRollingPeriod())
					return false;
			}
			if (hasReportType() != other.hasReportType())
				return false;
			if (hasReportType()) {
				if (reportType_ != other.reportType_)
					return false;
			}
			if (hasDaysSinceOnsetOfSymptoms() != other.hasDaysSinceOnsetOfSymptoms())
				return false;
			if (hasDaysSinceOnsetOfSymptoms()) {
				if (getDaysSinceOnsetOfSymptoms() != other.getDaysSinceOnsetOfSymptoms())
					return false;
			}
			if (!unknownFields.equals(other.unknownFields))
				return false;
			return true;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasKeyData()) {
				hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
				hash = (53 * hash) + getKeyData().hashCode();
			}
			if (hasTransmissionRiskLevel()) {
				hash = (37 * hash) + TRANSMISSION_RISK_LEVEL_FIELD_NUMBER;
				hash = (53 * hash) + getTransmissionRiskLevel();
			}
			if (hasRollingStartIntervalNumber()) {
				hash = (37 * hash) + ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER;
				hash = (53 * hash) + getRollingStartIntervalNumber();
			}
			if (hasRollingPeriod()) {
				hash = (37 * hash) + ROLLING_PERIOD_FIELD_NUMBER;
				hash = (53 * hash) + getRollingPeriod();
			}
			if (hasReportType()) {
				hash = (37 * hash) + REPORT_TYPE_FIELD_NUMBER;
				hash = (53 * hash) + reportType_;
			}
			if (hasDaysSinceOnsetOfSymptoms()) {
				hash = (37 * hash) + DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER;
				hash = (53 * hash) + getDaysSinceOnsetOfSymptoms();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(
				com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(
				com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseDelimitedFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code TemporaryExposureKey}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:TemporaryExposureKey)
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKeyOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKey_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKey_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.class,
								TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.Builder.class);
			}

			// Construct using
			// TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
				}
			}

			@java.lang.Override
			public Builder clear() {
				super.clear();
				keyData_ = com.google.protobuf.ByteString.EMPTY;
				bitField0_ = (bitField0_ & ~0x00000001);
				transmissionRiskLevel_ = 0;
				bitField0_ = (bitField0_ & ~0x00000002);
				rollingStartIntervalNumber_ = 0;
				bitField0_ = (bitField0_ & ~0x00000004);
				rollingPeriod_ = 144;
				bitField0_ = (bitField0_ & ~0x00000008);
				reportType_ = 0;
				bitField0_ = (bitField0_ & ~0x00000010);
				daysSinceOnsetOfSymptoms_ = 0;
				bitField0_ = (bitField0_ & ~0x00000020);
				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return TemporaryExposureKeyExportOuterClass.internal_static_TemporaryExposureKey_descriptor;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getDefaultInstanceForType() {
				return TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance();
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey build() {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKey result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey buildPartial() {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKey result = new TemporaryExposureKeyExportOuterClass.TemporaryExposureKey(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) != 0)) {
					to_bitField0_ |= 0x00000001;
				}
				result.keyData_ = keyData_;
				if (((from_bitField0_ & 0x00000002) != 0)) {
					result.transmissionRiskLevel_ = transmissionRiskLevel_;
					to_bitField0_ |= 0x00000002;
				}
				if (((from_bitField0_ & 0x00000004) != 0)) {
					result.rollingStartIntervalNumber_ = rollingStartIntervalNumber_;
					to_bitField0_ |= 0x00000004;
				}
				if (((from_bitField0_ & 0x00000008) != 0)) {
					to_bitField0_ |= 0x00000008;
				}
				result.rollingPeriod_ = rollingPeriod_;
				if (((from_bitField0_ & 0x00000010) != 0)) {
					to_bitField0_ |= 0x00000010;
				}
				result.reportType_ = reportType_;
				if (((from_bitField0_ & 0x00000020) != 0)) {
					result.daysSinceOnsetOfSymptoms_ = daysSinceOnsetOfSymptoms_;
					to_bitField0_ |= 0x00000020;
				}
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return super.clone();
			}

			@java.lang.Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
				return super.setField(field, value);
			}

			@java.lang.Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@java.lang.Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@java.lang.Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					java.lang.Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@java.lang.Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return super.addRepeatedField(field, value);
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof TemporaryExposureKeyExportOuterClass.TemporaryExposureKey) {
					return mergeFrom((TemporaryExposureKeyExportOuterClass.TemporaryExposureKey) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey other) {
				if (other == TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.getDefaultInstance())
					return this;
				if (other.hasKeyData()) {
					setKeyData(other.getKeyData());
				}
				if (other.hasTransmissionRiskLevel()) {
					setTransmissionRiskLevel(other.getTransmissionRiskLevel());
				}
				if (other.hasRollingStartIntervalNumber()) {
					setRollingStartIntervalNumber(other.getRollingStartIntervalNumber());
				}
				if (other.hasRollingPeriod()) {
					setRollingPeriod(other.getRollingPeriod());
				}
				if (other.hasReportType()) {
					setReportType(other.getReportType());
				}
				if (other.hasDaysSinceOnsetOfSymptoms()) {
					setDaysSinceOnsetOfSymptoms(other.getDaysSinceOnsetOfSymptoms());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKey parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (TemporaryExposureKeyExportOuterClass.TemporaryExposureKey) e
							.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;

			/**
			 * <pre>
			 * Key of infected user
			 * </pre>
			 *
			 * <code>optional bytes key_data = 1;</code>
			 * 
			 * @return Whether the keyData field is set.
			 */
			@java.lang.Override
			public boolean hasKeyData() {
				return ((bitField0_ & 0x00000001) != 0);
			}

			/**
			 * <pre>
			 * Key of infected user
			 * </pre>
			 *
			 * <code>optional bytes key_data = 1;</code>
			 * 
			 * @return The keyData.
			 */
			@java.lang.Override
			public com.google.protobuf.ByteString getKeyData() {
				return keyData_;
			}

			/**
			 * <pre>
			 * Key of infected user
			 * </pre>
			 *
			 * <code>optional bytes key_data = 1;</code>
			 * 
			 * @param value The keyData to set.
			 * @return This builder for chaining.
			 */
			public Builder setKeyData(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				keyData_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Key of infected user
			 * </pre>
			 *
			 * <code>optional bytes key_data = 1;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearKeyData() {
				bitField0_ = (bitField0_ & ~0x00000001);
				keyData_ = getDefaultInstance().getKeyData();
				onChanged();
				return this;
			}

			private int transmissionRiskLevel_;

			/**
			 * <pre>
			 * Varying risk associated with a key depending on diagnosis method
			 * </pre>
			 *
			 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
			 * 
			 * @return Whether the transmissionRiskLevel field is set.
			 */
			@java.lang.Override
			@java.lang.Deprecated
			public boolean hasTransmissionRiskLevel() {
				return ((bitField0_ & 0x00000002) != 0);
			}

			/**
			 * <pre>
			 * Varying risk associated with a key depending on diagnosis method
			 * </pre>
			 *
			 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
			 * 
			 * @return The transmissionRiskLevel.
			 */
			@java.lang.Override
			@java.lang.Deprecated
			public int getTransmissionRiskLevel() {
				return transmissionRiskLevel_;
			}

			/**
			 * <pre>
			 * Varying risk associated with a key depending on diagnosis method
			 * </pre>
			 *
			 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
			 * 
			 * @param value The transmissionRiskLevel to set.
			 * @return This builder for chaining.
			 */
			@java.lang.Deprecated
			public Builder setTransmissionRiskLevel(int value) {
				bitField0_ |= 0x00000002;
				transmissionRiskLevel_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Varying risk associated with a key depending on diagnosis method
			 * </pre>
			 *
			 * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
			 * 
			 * @return This builder for chaining.
			 */
			@java.lang.Deprecated
			public Builder clearTransmissionRiskLevel() {
				bitField0_ = (bitField0_ & ~0x00000002);
				transmissionRiskLevel_ = 0;
				onChanged();
				return this;
			}

			private int rollingStartIntervalNumber_;

			/**
			 * <pre>
			 * The interval number since epoch for which a key starts
			 * </pre>
			 *
			 * <code>optional int32 rolling_start_interval_number = 3;</code>
			 * 
			 * @return Whether the rollingStartIntervalNumber field is set.
			 */
			@java.lang.Override
			public boolean hasRollingStartIntervalNumber() {
				return ((bitField0_ & 0x00000004) != 0);
			}

			/**
			 * <pre>
			 * The interval number since epoch for which a key starts
			 * </pre>
			 *
			 * <code>optional int32 rolling_start_interval_number = 3;</code>
			 * 
			 * @return The rollingStartIntervalNumber.
			 */
			@java.lang.Override
			public int getRollingStartIntervalNumber() {
				return rollingStartIntervalNumber_;
			}

			/**
			 * <pre>
			 * The interval number since epoch for which a key starts
			 * </pre>
			 *
			 * <code>optional int32 rolling_start_interval_number = 3;</code>
			 * 
			 * @param value The rollingStartIntervalNumber to set.
			 * @return This builder for chaining.
			 */
			public Builder setRollingStartIntervalNumber(int value) {
				bitField0_ |= 0x00000004;
				rollingStartIntervalNumber_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * The interval number since epoch for which a key starts
			 * </pre>
			 *
			 * <code>optional int32 rolling_start_interval_number = 3;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearRollingStartIntervalNumber() {
				bitField0_ = (bitField0_ & ~0x00000004);
				rollingStartIntervalNumber_ = 0;
				onChanged();
				return this;
			}

			private int rollingPeriod_ = 144;

			/**
			 * <pre>
			 * Increments of 10 minutes describing how long a key is valid
			 * </pre>
			 *
			 * <code>optional int32 rolling_period = 4 [default = 144];</code>
			 * 
			 * @return Whether the rollingPeriod field is set.
			 */
			@java.lang.Override
			public boolean hasRollingPeriod() {
				return ((bitField0_ & 0x00000008) != 0);
			}

			/**
			 * <pre>
			 * Increments of 10 minutes describing how long a key is valid
			 * </pre>
			 *
			 * <code>optional int32 rolling_period = 4 [default = 144];</code>
			 * 
			 * @return The rollingPeriod.
			 */
			@java.lang.Override
			public int getRollingPeriod() {
				return rollingPeriod_;
			}

			/**
			 * <pre>
			 * Increments of 10 minutes describing how long a key is valid
			 * </pre>
			 *
			 * <code>optional int32 rolling_period = 4 [default = 144];</code>
			 * 
			 * @param value The rollingPeriod to set.
			 * @return This builder for chaining.
			 */
			public Builder setRollingPeriod(int value) {
				bitField0_ |= 0x00000008;
				rollingPeriod_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Increments of 10 minutes describing how long a key is valid
			 * </pre>
			 *
			 * <code>optional int32 rolling_period = 4 [default = 144];</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearRollingPeriod() {
				bitField0_ = (bitField0_ & ~0x00000008);
				rollingPeriod_ = 144;
				onChanged();
				return this;
			}

			private int reportType_ = 0;

			/**
			 * <pre>
			 * Type of diagnosis associated with a key.
			 * </pre>
			 *
			 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
			 * 
			 * @return Whether the reportType field is set.
			 */
			@java.lang.Override
			public boolean hasReportType() {
				return ((bitField0_ & 0x00000010) != 0);
			}

			/**
			 * <pre>
			 * Type of diagnosis associated with a key.
			 * </pre>
			 *
			 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
			 * 
			 * @return The reportType.
			 */
			@java.lang.Override
			public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType getReportType() {
				@SuppressWarnings("deprecation")
				TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType result = TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType
						.valueOf(reportType_);
				return result == null ? TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType.UNKNOWN
						: result;
			}

			/**
			 * <pre>
			 * Type of diagnosis associated with a key.
			 * </pre>
			 *
			 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
			 * 
			 * @param value The reportType to set.
			 * @return This builder for chaining.
			 */
			public Builder setReportType(TemporaryExposureKeyExportOuterClass.TemporaryExposureKey.ReportType value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000010;
				reportType_ = value.getNumber();
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Type of diagnosis associated with a key.
			 * </pre>
			 *
			 * <code>optional .TemporaryExposureKey.ReportType report_type = 5;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearReportType() {
				bitField0_ = (bitField0_ & ~0x00000010);
				reportType_ = 0;
				onChanged();
				return this;
			}

			private int daysSinceOnsetOfSymptoms_;

			/**
			 * <pre>
			 * Number of days elapsed between symptom onset and the TEK being used.
			 * E.g. 2 means TEK is 2 days after onset of symptoms.
			 * </pre>
			 *
			 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
			 * 
			 * @return Whether the daysSinceOnsetOfSymptoms field is set.
			 */
			@java.lang.Override
			public boolean hasDaysSinceOnsetOfSymptoms() {
				return ((bitField0_ & 0x00000020) != 0);
			}

			/**
			 * <pre>
			 * Number of days elapsed between symptom onset and the TEK being used.
			 * E.g. 2 means TEK is 2 days after onset of symptoms.
			 * </pre>
			 *
			 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
			 * 
			 * @return The daysSinceOnsetOfSymptoms.
			 */
			@java.lang.Override
			public int getDaysSinceOnsetOfSymptoms() {
				return daysSinceOnsetOfSymptoms_;
			}

			/**
			 * <pre>
			 * Number of days elapsed between symptom onset and the TEK being used.
			 * E.g. 2 means TEK is 2 days after onset of symptoms.
			 * </pre>
			 *
			 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
			 * 
			 * @param value The daysSinceOnsetOfSymptoms to set.
			 * @return This builder for chaining.
			 */
			public Builder setDaysSinceOnsetOfSymptoms(int value) {
				bitField0_ |= 0x00000020;
				daysSinceOnsetOfSymptoms_ = value;
				onChanged();
				return this;
			}

			/**
			 * <pre>
			 * Number of days elapsed between symptom onset and the TEK being used.
			 * E.g. 2 means TEK is 2 days after onset of symptoms.
			 * </pre>
			 *
			 * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
			 * 
			 * @return This builder for chaining.
			 */
			public Builder clearDaysSinceOnsetOfSymptoms() {
				bitField0_ = (bitField0_ & ~0x00000020);
				daysSinceOnsetOfSymptoms_ = 0;
				onChanged();
				return this;
			}

			@java.lang.Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:TemporaryExposureKey)
		}

		// @@protoc_insertion_point(class_scope:TemporaryExposureKey)
		private static final TemporaryExposureKeyExportOuterClass.TemporaryExposureKey DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new TemporaryExposureKeyExportOuterClass.TemporaryExposureKey();
		}

		public static TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<TemporaryExposureKey> PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKey>() {
			@java.lang.Override
			public TemporaryExposureKey parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new TemporaryExposureKey(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<TemporaryExposureKey> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<TemporaryExposureKey> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public TemporaryExposureKeyExportOuterClass.TemporaryExposureKey getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	private static final com.google.protobuf.Descriptors.Descriptor internal_static_TemporaryExposureKeyExport_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_TemporaryExposureKeyExport_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor internal_static_SignatureInfo_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_SignatureInfo_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor internal_static_TemporaryExposureKey_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_TemporaryExposureKey_fieldAccessorTable;

	public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
		return descriptor;
	}

	private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
	static {
		java.lang.String[] descriptorData = { "\n TemporaryExposureKeyExport.proto\"\376\001\n\032T"
				+ "emporaryExposureKeyExport\022\027\n\017start_times"
				+ "tamp\030\001 \001(\006\022\025\n\rend_timestamp\030\002 \001(\006\022\016\n\006reg"
				+ "ion\030\003 \001(\t\022\021\n\tbatch_num\030\004 \001(\005\022\022\n\nbatch_si"
				+ "ze\030\005 \001(\005\022\'\n\017signature_infos\030\006 \003(\0132\016.Sign"
				+ "atureInfo\022#\n\004keys\030\007 \003(\0132\025.TemporaryExpos"
				+ "ureKey\022+\n\014revised_keys\030\010 \003(\0132\025.Temporary"
				+ "ExposureKey\"\227\001\n\rSignatureInfo\022 \n\030verific"
				+ "ation_key_version\030\003 \001(\t\022\033\n\023verification_"
				+ "key_id\030\004 \001(\t\022\033\n\023signature_algorithm\030\005 \001("
				+ "\tJ\004\010\001\020\002J\004\010\002\020\003R\rapp_bundle_idR\017android_pa"
				+ "ckage\"\354\002\n\024TemporaryExposureKey\022\020\n\010key_da"
				+ "ta\030\001 \001(\014\022#\n\027transmission_risk_level\030\002 \001("
				+ "\005B\002\030\001\022%\n\035rolling_start_interval_number\030\003"
				+ " \001(\005\022\033\n\016rolling_period\030\004 \001(\005:\003144\0225\n\013rep"
				+ "ort_type\030\005 \001(\0162 .TemporaryExposureKey.Re"
				+ "portType\022$\n\034days_since_onset_of_symptoms"
				+ "\030\006 \001(\021\"|\n\nReportType\022\013\n\007UNKNOWN\020\000\022\022\n\016CON"
				+ "FIRMED_TEST\020\001\022 \n\034CONFIRMED_CLINICAL_DIAG"
				+ "NOSIS\020\002\022\017\n\013SELF_REPORT\020\003\022\r\n\tRECURSIVE\020\004\022"
				+ "\013\n\007REVOKED\020\005" };
		descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
				new com.google.protobuf.Descriptors.FileDescriptor[] {});
		internal_static_TemporaryExposureKeyExport_descriptor = getDescriptor().getMessageTypes().get(0);
		internal_static_TemporaryExposureKeyExport_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_TemporaryExposureKeyExport_descriptor, new java.lang.String[] { "StartTimestamp",
						"EndTimestamp", "Region", "BatchNum", "BatchSize", "SignatureInfos", "Keys", "RevisedKeys", });
		internal_static_SignatureInfo_descriptor = getDescriptor().getMessageTypes().get(1);
		internal_static_SignatureInfo_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_SignatureInfo_descriptor,
				new java.lang.String[] { "VerificationKeyVersion", "VerificationKeyId", "SignatureAlgorithm", });
		internal_static_TemporaryExposureKey_descriptor = getDescriptor().getMessageTypes().get(2);
		internal_static_TemporaryExposureKey_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_TemporaryExposureKey_descriptor,
				new java.lang.String[] { "KeyData", "TransmissionRiskLevel", "RollingStartIntervalNumber",
						"RollingPeriod", "ReportType", "DaysSinceOnsetOfSymptoms", });
	}

	// @@protoc_insertion_point(outer_class_scope)
}
